<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<import resource="classpath:sql/baseSQL.xml" />
	<import resource="classpath:sql/batchSQL.xml" />
	
	<bean id="userSqlStatement" class="com.iisigroup.cap.utils.CapSqlStatement">
		<constructor-arg>
			<util:set value-type="java.util.HashMap">
				<ref bean="baseSql" />
				<ref bean="userSql" />
				<ref bean="batchSql" />
			</util:set>
		</constructor-arg>
		<property name="parserContext" ref="sqlParserContext" />
	</bean>
	<util:map id="userSql" map-class="java.util.HashMap" key-type="java.lang.String">
        <entry key="User.find">
            <value><![CDATA[
                select distinct u.* from def_usr u left join def_rlset ur on ur.staffpid = u.staffpid
            ]]></value>
        </entry>
		<entry key="Role.findAllWithSelectedByUserId">
			<value><![CDATA[
                select
                    r.rolcode as roleId,
                    r.rolName,
                    auth.staffpid
                from def_rle r
                left join (select * from def_rlset ur where ur.staffpid = :userId) auth on r.rolcode = auth.rolcode
            ]]></value>
		</entry>
    </util:map>
</beans>
